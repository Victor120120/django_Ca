"""
Django settings for src project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-*nsz1ezr8n8u2$b3t6zxcr&d-l7r8^_9r4y!^+d)e1r%+$7)r6'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True



ALLOWED_HOSTS = os.environ.get('DJANGO_CA_ALLOWED_HOSTS','127.0.0.1,localhost,0.0.0.0,http://0.0.0.0:8000,http://localhost:8000,0.0.0.0:8000').split(',')

CSRF_TRUSTED_ORIGINS = os.environ.get('DJANGO_CA_TRUSTED_ORIGINS', 'http://0.0.0.0:8000,http://localhost:8000').split(',')

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_object_actions',
    'django_ca',
    'certificates_generator',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'django_ca_core.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'django_ca_core.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

#DATABASES = {
#    'default': {
#        'ENGINE': 'django.db.backends.sqlite3',
#        'NAME': BASE_DIR / 'db.sqlite3',
#    }
#}

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.getenv('POSTGRES_DB', 'DBdjango_Ca'),
        'USER': os.getenv('POSTGRES_USER', 'django_ca'),
        'PASSWORD': os.getenv('POSTGRES_PASSWORD', '123456'),
        'HOST': os.getenv('POSTGRES_HOST', 'localhost'),
        #'HOST': os.getenv('POSTGRES_HOST', 'localhost'),
        'PORT': os.getenv('POSTGRES_PORT', '5432'),
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

CA_CERTIFICATES_DIR = "./certificates"
CA_KEYS_DIR = "./keys"

# You must configure STORAGES and add a "django-ca" alias.
STORAGES = {
    "default": {
        "BACKEND": "django.core.files.storage.FileSystemStorage",
    },
    "staticfiles": {
        "BACKEND": "django.contrib.staticfiles.storage.StaticFilesStorage",
    },
    "django-ca": {
        "BACKEND": "django.core.files.storage.FileSystemStorage",
        "OPTIONS": {
            "location": os.getenv('CA_PATH', "./certificates"),
            "file_permissions_mode": 0o600,
            "directory_permissions_mode": 0o700,
        },
    },
}
CA_ENABLE_REST_API = True
CA_NAME = "Mi Autoridad Certificadora"
CA_SERIAL_NUMBER = 1000  # El número de serie inicial de la CA
CA_KEY_SIZE = 2048  # El tamaño de la clave RSA para la CA
CA_SIGNATURE_ALGORITHM = "sha256"

CA_OCSP_URLS = {
    'localhost-ca': {
        'responder_key': './ocsp.key',
        'responder_cert': './ocsp.pem',
    }
}

CA_DEFAULT_HOSTNAME = os.getenv('CA_DEFAULT_HOSTNAME', "127.0.0.1:8003")



# Certificates generator
CA_PATH = os.environ.get('CA_PATH', os.path.join(BASE_DIR, 'certificates/ca'))


DJANGO_CA_SERIAL_DEVELOPMENT = os.getenv('DJANGO_CA_SERIAL_DEVELOPMENT', '742CE70F9CACC2D70FEF6BC992906272B51A46F3')
DJANGO_CA_SERIAL_PRODUCTION = os.getenv('DJANGO_CA_SERIAL_PRODUCTION', '3106D4A9C5220E17137286BA01A0227167B5C24')

DJANGO_CA_URL_PATH = os.getenv('DJANGO_CA_URL_PATH', 'http://127.0.0.1:8003/api/')
DJANGO_CA_USER = os.getenv('CA_USER', 'victor')
DJANGO_CA_USER_PASSWORD = os.getenv('CA_USER_PASSWORD', '123')
"""
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'level': 'DEBUG',
            'propagate': True,
        },
    },
}
"""